From f202100957696063df31343b12ed073abb3a5438 Mon Sep 17 00:00:00 2001
From: Rock Qu <yunq@xilinx.com>
Date: Wed, 16 Jan 2019 14:54:17 -0800
Subject: [PATCH] fix zynq pr

---
 drivers/fpga/fpga-mgr.c  | 24 ++++++++++++++++++++++++
 drivers/fpga/zynq-fpga.c | 18 ++++++++++++++----
 2 files changed, 38 insertions(+), 4 deletions(-)

diff --git a/drivers/fpga/fpga-mgr.c b/drivers/fpga/fpga-mgr.c
index 1d51f66..1be71f5 100644
--- a/drivers/fpga/fpga-mgr.c
+++ b/drivers/fpga/fpga-mgr.c
@@ -28,6 +28,8 @@
 #include <linux/slab.h>
 #include <linux/scatterlist.h>
 #include <linux/highmem.h>
+#include <linux/fs.h>
+#include <asm/uaccess.h>
 
 static DEFINE_IDA(fpga_mgr_ida);
 static struct class *fpga_mgr_class;
@@ -291,6 +293,28 @@ int fpga_mgr_firmware_load(struct fpga_manager *mgr,
 	const struct firmware *fw;
 	int ret;
 
+	/* temporary patch to read correct flag from file system */
+	struct file *f_handle;
+	char fs_flags[5];
+	u32 buf, i;
+	mm_segment_t fs;
+	f_handle = filp_open("/sys/class/fpga_manager/fpga0/flags", O_RDONLY, 0);
+	fs = get_fs();
+	set_fs(get_ds());
+	f_handle->f_op->read(f_handle, fs_flags, 5, &f_handle->f_pos);
+	set_fs(fs);
+	filp_close(f_handle, NULL);
+	for (i=1; i<5; i++) {
+		if (fs_flags[i] == '\n') {
+			fs_flags[i] = '\0';
+			break;
+		}
+	}
+	sscanf(fs_flags, "%d", &buf);
+	dev_info(dev, "reading flags %d\n", buf);
+	info->flags = buf;
+
+	/* write the image with correct flag now */
 	dev_info(dev, "writing %s to %s\n", image_name, mgr->name);
 
 	mgr->state = FPGA_MGR_STATE_FIRMWARE_REQ;
diff --git a/drivers/fpga/zynq-fpga.c b/drivers/fpga/zynq-fpga.c
index 70b15b3..96cdd2c 100644
--- a/drivers/fpga/zynq-fpga.c
+++ b/drivers/fpga/zynq-fpga.c
@@ -501,10 +501,20 @@ static int zynq_fpga_ops_write_complete(struct fpga_manager *mgr,
 	if (err)
 		return err;
 
-	err = zynq_fpga_poll_timeout(priv, INT_STS_OFFSET, intr_status,
-				     intr_status & IXR_PCFG_DONE_MASK,
-				     INIT_POLL_DELAY,
-				     INIT_POLL_TIMEOUT);
+    if (!(info->flags & FPGA_MGR_PARTIAL_RECONFIG)) {
+        err = zynq_fpga_poll_timeout(priv, INT_STS_OFFSET, intr_status,
+                        intr_status & IXR_PCFG_DONE_MASK,
+                        INIT_POLL_DELAY,
+                        INIT_POLL_TIMEOUT);
+    } else {
+        intr_status = zynq_fpga_read(priv, INT_STS_OFFSET);
+        zynq_fpga_write(priv, INT_STS_OFFSET, 
+                        intr_status & ~IXR_PCFG_DONE_MASK);
+        err = zynq_fpga_poll_timeout(priv, INT_STS_OFFSET, intr_status,
+                        intr_status & IXR_D_P_DONE_MASK,
+                        INIT_POLL_DELAY,
+                        INIT_POLL_TIMEOUT);
+    }
 
 	clk_disable(priv->clk);
 
-- 
1.9.5

